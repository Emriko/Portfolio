[{"content":" Type Description Engine Penugine Timeline ~8 weeks 50% ","date":"March 26, 2025","permalink":"/posts/particlesystem/","summary":" Type Description Engine Penugine Timeline ~8 weeks 50% ","title":"Compute Shader particle system with Depth collission","type":"posts"},{"content":" Type Description Engine Penugine Timeline ~1-2 weeks 50% Screen Space Ambient Occlusion, more commonly known as SSAO, is a post-processing technique used to approximate how occluded a pixel in a 3D scene would be. This is done to adjust the worldâ€™s ambient light accordingly, mimicking the effect of the pixel\u0026rsquo;s occlusion. This is performed as a screen space pass, taking in geometry positions and normals, hence the name Screen Space Ambient Occlusion.\nImplementation The purpose of SSAO is to determine how occluded a pixel is. To do this, we need some knowledge about the rest of the 3D scene. In our case, we take the Z-Buffer from the camera\u0026rsquo;s perspective. In this case, we save the perspective Z value in a texture before our SSAO pass. This corresponds to the depth.\nWhen determining a pixel\u0026rsquo;s occlusion, some precomputed random directions are used as an offset from the pixel\u0026rsquo;s world position, which is taken from the geometry buffer. This new position is projected into view-space to get its z-depth. With the found value, a comparison is made to the original z-depth of our pixel to determine if it\u0026rsquo;s closer to the camera. If it is, that pixel is occluded by that position, contributing to the occlusion factor. This is then repeated a handful of times to get an estimate of the amount of occlusion the pixel would have\nFigure showing occluded projected possitions in a sphere\nHowever, a pixel cannot be occluded by a position behind its own surface. To improve the efficiency of a sample, instead of using a sphere, we ensure the position is aligned with the pixel\u0026rsquo;s surface normal (see figure below).\nTo achieve this, we take the surface normal of the pixel and create a valid TBN matrix for its rotation space. A TBN matrix (Tangent, Bitangent, Normal) is used to map the random sample directions into the correct orientation in world space based on the pixel\u0026rsquo;s normal vector. This process is very uniform, so noise may be used to introduce variability, and used to rotate the TBN matrix into another valid one, resulting in less uniformity by having varied matrices.\nFigure showing hemisphere\nResults Following, a comparison image with and without the effect can be seen. The results act in a way to adding relation to each scene object and a level of depth to their surrounding backgrounds. In the comparison image, the effect of SSAO adds realistic shadows and depth to the scene, making the objects feel more grounded in the environment.\n","date":"March 26, 2025","permalink":"/posts/ssao/","summary":" Type Description Engine Penugine Timeline ~1-2 weeks 50% ","title":"Screen Space Ambient Occlusion","type":"posts"},{"content":" Type Description Engine Unity Timeline 3 days Cooking Grandma is a mutiple award winning Game Jam hosted by The Game Assembly with the theme of \u0026ldquo;Combination\u0026rdquo;. I can hands down say that the work on Cooking Grandma was the most fun I have had with a project durring the stint at TGA.\nIn just a couple of days the teamwork, creativity, and laughs really carried this project through the door. With no time to say no and just have fun it is very impressive what can be accomplished.\nI would encourage you to download the game and try it out if you have the time!\nCredits Name Title William Arnber Programming Gustaf Engsner Programming Emrik Ã…berg Wenthzel Programming Carl Anderson Graphics and vfx Hampus Helin Graphics and vfx ","date":"March 26, 2025","permalink":"/posts/cookinggrandma/","summary":" Type Description Engine Unity Timeline 3 days ","title":"Cooking Grandma ðŸ‘µ","type":"posts"},{"content":"Gameplay and Graphics programmer\nEver since I was young I have been very technical and loved to solve problems. Usually starting with the most intuitive paths and love to try differnet approaches until the pieces eventualyl fall into place.\nAfter 3 years of computer science courses and a year long stint at Arlanda airpot I found myself at The Game Assembly, where I truly found my programming passion working with what i love.\nIn my freetime you will obviously be able to find me playing videogames, but beyond that my main hobby is indoors rockclimbing. (hopefully soon to be outdoors as well)\ntesting text\n","date":"March 26, 2025","permalink":"/about/","summary":"Gameplay and Graphics programmer\nEver since I was young I have been very technical and loved to solve problems. Usually starting with the most intuitive paths and love to try differnet approaches until the pieces eventualyl fall into place.\nAfter 3 years of computer science courses and a year long stint at Arlanda airpot I found myself at The Game Assembly, where I truly found my programming passion working with what i love.\n","title":"About me","type":"page"}]